apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: microstore
  labels:
    app: mysql
spec:
  serviceName: "mysql"  # debe coincidir con el headless service name
  replicas: 1            # una instancia para proyecto académico
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8.0
          ports:
            - containerPort: 3306
              name: mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: root-password
            - name: MYSQL_DATABASE
              value: myflaskapp
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
            - name: init-script
              mountPath: /docker-entrypoint-initdb.d  # directorio leído por MySQL al iniciarse
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - "mysqladmin ping -h localhost -u root -p$MYSQL_ROOT_PASSWORD"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - "mysql -h localhost -u root -p$MYSQL_ROOT_PASSWORD -e 'SELECT 1'"
            initialDelaySeconds: 5
            periodSeconds: 2
            timeoutSeconds: 1
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "1Gi"
              cpu: "1000m"
      volumes:
        - name: init-script
          configMap:
            name: mysql-initdb
  volumeClaimTemplates:
    - metadata:
        name: mysql-persistent-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 5Gi